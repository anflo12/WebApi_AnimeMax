"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){(0,_defineProperty2["default"])(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}/**
 * DOM selectors.
 * */var _require=require("node-html-parser"),parse=_require.parse;// Parse with cheerio
var parseHTML=function parseHTML(data){return parse(data,{script:true})};var toArray=function toArray(data){return(0,_toConsumableArray2["default"])(data)};// Search a variable in scripts (for episodes and anime details)
var extractVariableValue=function extractVariableValue(dom,variableName){var variable="".concat(variableName," =");var scripts=dom.querySelectorAll("script");var episodesScript=toArray(scripts).find(function(item){return item.innerHTML.includes(variable)});if(!episodesScript)return;var scriptInnerHTML=episodesScript.innerHTML;var startIndex=scriptInnerHTML.indexOf(variable)+variable.length;var endIndex=scriptInnerHTML.indexOf(";",startIndex);var valueString=scriptInnerHTML.substring(startIndex,endIndex);return valueString};var extractEpisodes=function extractEpisodes(dom){var episodes=extractVariableValue(dom,"var episodes")||"[]";var episodesJSON=JSON.parse(episodes);var formatedEpisodes=episodesJSON.map(function(item){return{index:item[0],id:item[1]}});return formatedEpisodes};var formatAnimeList=function formatAnimeList(dom){return function(element,i){var link=element.querySelector("a").attributes.href;var animeId=link.split("/")[2];var title=link.split("/")[3];var image=dom.querySelectorAll(".Image img")[i].attributes.src;var label=element.querySelector(".Title").innerHTML;var type=element.querySelector(".Image span.Type").innerHTML;return{link:link,animeId:animeId,title:title,image:image,label:label,type:type}}};var extractAnimeList=function extractAnimeList(dom){var animeElements=dom.querySelectorAll(".Anime");return toArray(animeElements).map(formatAnimeList(dom))};var extractAnimeGenres=function extractAnimeGenres(dom){var genresElements=dom.querySelectorAll(".Nvgnrs a");return toArray(genresElements).map(function(element){return element.innerHTML})};var extractAnimeBasicInfo=function extractAnimeBasicInfo(dom){var animeBasicInfo=extractVariableValue(dom,"var anime_info")||"[]";var _JSON$parse=JSON.parse(animeBasicInfo),_JSON$parse2=(0,_slicedToArray2["default"])(_JSON$parse,3),index=_JSON$parse2[0],label=_JSON$parse2[1],title=_JSON$parse2[2];return{index:index,label:label,title:title}};var extractAnimeDetails=function extractAnimeDetails(dom){var animeBasicInfo=extractAnimeBasicInfo(dom);return _objectSpread({},animeBasicInfo,{// rate: dom.querySelector('#votes_prmd').innerHTML,
// votes: dom.querySelector('#votes_nmbr').innerHTML,
genres:extractAnimeGenres(dom),description:dom.querySelector(".Description p").innerHTML.trim(),episodes:extractEpisodes(dom)})};var extractVideoSources=function extractVideoSources(dom){var videosRAW=extractVariableValue(dom,"var videos")||"{}";var _JSON$parse3=JSON.parse(videosRAW),videos=_JSON$parse3.SUB;var videoSources=videos.map(function(item){return item.code});var downloadLink=extractDownloadLink(videos);return{videos:videoSources,downloads:downloadLink}};var extractDownloadLink=function extractDownloadLink(videos){var downloadLink=videos.find(function(item){return item.server==="mega"});return downloadLink!==undefined?downloadLink.url:""};module.exports={parseHTML:parseHTML,extractAnimeDetails:extractAnimeDetails,extractAnimeList:extractAnimeList,extractVideoSources:extractVideoSources};